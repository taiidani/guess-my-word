name: deploy

on:
  - push

jobs:
  deliver:
    runs-on: ubuntu-latest
    concurrency: deployment
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true

      - name: build
        run: go build -o ./guess-my-word

      - name: setup buildx
        uses: docker/setup-buildx-action@v2

      - name: login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: publish
        uses: docker/build-push-action@v4
        with:
          context: .
          # push: ${{ github.ref_name == 'main' }}
          push: true
          provenance: true
          tags: "ghcr.io/taiidani/guess-my-word:latest"

  deploy:
    needs: deliver
    runs-on: ubuntu-latest
    environment: production
    # if: github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup-terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: 1.4.2
          cli_config_credentials_token:
            ${{ secrets.TFC_TOKEN }}

      - name: init
        working-directory: .github/deploy
        run: terraform init

      - name: validate
        working-directory: .github/deploy
        run: terraform validate -no-color

      - name: apply
        working-directory: .github/deploy
        run: terraform apply -auto-approve -input=false
